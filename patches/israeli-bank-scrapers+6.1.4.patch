diff --git a/node_modules/israeli-bank-scrapers/lib/helpers/fetch.js b/node_modules/israeli-bank-scrapers/lib/helpers/fetch.js
index 843eadb..8dfa390 100644
--- a/node_modules/israeli-bank-scrapers/lib/helpers/fetch.js
+++ b/node_modules/israeli-bank-scrapers/lib/helpers/fetch.js
@@ -56,20 +56,17 @@ async function fetchGraphql(url, query, variables = {}, extraHeaders = {}) {
   return result.data;
 }
 function fetchGetWithinPage(page, url) {
-  return page.evaluate(innerUrl => {
-    return new Promise((resolve, reject) => {
-      fetch(innerUrl, {
-        credentials: 'include'
-      }).then(result => {
-        if (result.status === 204) {
-          resolve(null);
-        } else {
-          resolve(result.json());
-        }
-      }).catch(e => {
-        reject(e);
-      });
-    });
+  return page.evaluate(async innerUrl => {
+    let result;
+    try {
+      result = await fetch(innerUrl, { credentials: 'include' });
+      if (result.status === 204) {
+        return null;
+      }
+      return result.json();
+    } catch (e) {
+      throw new Error(`fetchGetWithinPage error: ${e}, url: ${innerUrl}, stack: ${e?.stack}, status: ${result?.status}`);
+    }
   }, url);
 }
 function fetchPostWithinPage(page, url, data, extraHeaders = {}) {
diff --git a/node_modules/israeli-bank-scrapers/lib/scrapers/base-isracard-amex.js b/node_modules/israeli-bank-scrapers/lib/scrapers/base-isracard-amex.js
index 8827ffc..8b9220c 100644
--- a/node_modules/israeli-bank-scrapers/lib/scrapers/base-isracard-amex.js
+++ b/node_modules/israeli-bank-scrapers/lib/scrapers/base-isracard-amex.js
@@ -241,6 +241,16 @@ class IsracardAmexBaseScraper extends _baseScraperWithBrowser.BaseScraperWithBro
     });
     await (0, _browser.maskHeadlessUserAgent)(this.page);
     await this.navigateTo(`${this.baseUrl}/personalarea/Login`);
+    try {
+      const initialPageTitle = await this.page.title();
+      debug("initial page title: ", initialPageTitle);
+      if (!initialPageTitle.includes('ישראכרט') && !initialPageTitle.includes('אמריקן אקספרס')) {
+        debug("waiting for page to load");
+        await this.page.waitForNavigation({ timeout: 60_000 });
+      }
+    } catch (error) {
+      debug("error while waiting for navigation: ", error);
+    }
     this.emitProgress(_definitions.ScraperProgressTypes.LoggingIn);
     const validateUrl = `${this.servicesUrl}?reqName=ValidateIdData`;
     const validateRequest = {
diff --git a/node_modules/israeli-bank-scrapers/lib/scrapers/base-scraper-with-browser.js b/node_modules/israeli-bank-scrapers/lib/scrapers/base-scraper-with-browser.js
index 96e3ca8..6f1a4fa 100644
--- a/node_modules/israeli-bank-scrapers/lib/scrapers/base-scraper-with-browser.js
+++ b/node_modules/israeli-bank-scrapers/lib/scrapers/base-scraper-with-browser.js
@@ -251,7 +251,21 @@ class BaseScraperWithBrowser extends _baseScraper.BaseScraper {
         fullPage: true
       });
     }
-    await Promise.all(this.cleanups.reverse().map(cleanup => cleanup()));
+
+    for (const [i, cleanup] of this.cleanups.reverse().entries()) {
+      try {
+        debug(`[TERMINATE] Running cleanup #${i}`);
+        await cleanup();
+        debug(`[TERMINATE] Cleanup #${i} finished successfully`);
+      } catch (err) {
+        debug(`[TERMINATE] Cleanup #${i} failed:`, err);
+        if (err && typeof err.message === 'string' && err.message.includes('No target with given id found')) {
+          debug(`[TERMINATE] Suppressing Puppeteer closeTarget error for cleanup #${i}`);
+        } else {
+          throw err;
+        }
+      }
+    }
     this.cleanups = [];
   }
   handleLoginResult(loginResult) {
